import { DashboardData } from '../types';
import { DashboardConfig } from '../config/dashboard.config';
export declare class EnhancedDashboardUI {
    private config;
    private screen;
    private grid;
    private widgets;
    private currentData;
    private controlService;
    private panelStates;
    private activePanel;
    private selectedServiceIndex;
    private serviceCategories;
    constructor(config: DashboardConfig);
    private initializePanelStates;
    private setupLayout;
    private createMicroservicesPanel;
    private createInfrastructurePanel;
    private createSystemResourcesPanel;
    private createAlertsPanel;
    private createLogsPanel;
    private createServiceControlPanel;
    private setupKeyBindings;
    private focusNextPanel;
    private focusPreviousPanel;
    private togglePanelCollapse;
    private highlightActivePanel;
    private reorganizeLayout;
    private navigateServices;
    private updateServiceDetails;
    private startSelectedService;
    private stopSelectedService;
    private restartSelectedService;
    private updateControlPanels;
    private setViewMode;
    private showServiceLogs;
    private showServiceMetrics;
    update(data: DashboardData): void;
    private updateTopBar;
    private updateMicroservices;
    private updateInfrastructure;
    private updateSystemResources;
    private updateAlerts;
    private updateLogs;
    private updateBottomBar;
    private formatServiceStatus;
    private formatDockerStatus;
    private formatSeverity;
    private formatLogLevel;
    private formatUptime;
    private getHealthColor;
    private showEnhancedHelp;
    render(): void;
    destroy(): void;
}
//# sourceMappingURL=enhanced-dashboard.ui.d.ts.map