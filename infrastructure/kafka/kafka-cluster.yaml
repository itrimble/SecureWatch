apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: securewatch-kafka
  namespace: securewatch
spec:
  kafka:
    version: 3.6.0
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: tls
      - name: external
        port: 9094
        type: loadbalancer
        tls: true
        authentication:
          type: tls
    config:
      # High performance settings for 10M+ events/second
      num.network.threads: 16
      num.io.threads: 16
      socket.send.buffer.bytes: 1048576
      socket.receive.buffer.bytes: 1048576
      socket.request.max.bytes: 104857600
      
      # Log retention settings
      log.retention.hours: 168  # 7 days default
      log.segment.bytes: 1073741824  # 1GB segments
      log.retention.check.interval.ms: 300000
      
      # Replication settings
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      
      # Performance optimizations
      compression.type: zstd
      batch.size: 1048576
      linger.ms: 5
      max.in.flight.requests.per.connection: 5
      
      # Topic defaults
      auto.create.topics.enable: false
      default.replication.factor: 3
      min.insync.replicas: 2
      
    storage:
      type: persistent-claim
      size: 2Ti
      class: fast-ssd
      deleteClaim: false
    
    resources:
      requests:
        memory: 16Gi
        cpu: "4"
      limits:
        memory: 32Gi
        cpu: "8"
    
    jvmOptions:
      -Xms: 8192m
      -Xmx: 16384m
      gcLoggingEnabled: true
      javaSystemProperties:
        - name: com.sun.management.jmxremote
          value: "true"
        - name: com.sun.management.jmxremote.authenticate
          value: "false"
        - name: com.sun.management.jmxremote.ssl
          value: "false"
    
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
  
  zookeeper:
    replicas: 3
    storage:
      type: persistent-claim
      size: 100Gi
      class: standard-ssd
      deleteClaim: false
    
    resources:
      requests:
        memory: 2Gi
        cpu: "1"
      limits:
        memory: 4Gi
        cpu: "2"
    
    jvmOptions:
      -Xms: 1024m
      -Xmx: 2048m
  
  entityOperator:
    topicOperator:
      resources:
        requests:
          memory: 512Mi
          cpu: "0.5"
        limits:
          memory: 1Gi
          cpu: "1"
    userOperator:
      resources:
        requests:
          memory: 512Mi
          cpu: "0.5"
        limits:
          memory: 1Gi
          cpu: "1"
  
  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"
    resources:
      requests:
        memory: 256Mi
        cpu: "0.2"
      limits:
        memory: 512Mi
        cpu: "0.5"

---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: log-events-raw
  namespace: securewatch
  labels:
    strimzi.io/cluster: securewatch-kafka
spec:
  partitions: 100
  replicas: 3
  config:
    retention.ms: 604800000  # 7 days
    segment.ms: 3600000      # 1 hour
    compression.type: zstd
    max.message.bytes: 10485760  # 10MB
    min.insync.replicas: 2

---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: log-events-normalized
  namespace: securewatch
  labels:
    strimzi.io/cluster: securewatch-kafka
spec:
  partitions: 100
  replicas: 3
  config:
    retention.ms: 2592000000  # 30 days
    segment.ms: 3600000       # 1 hour
    compression.type: zstd
    max.message.bytes: 5242880  # 5MB
    min.insync.replicas: 2

---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: log-events-enriched
  namespace: securewatch
  labels:
    strimzi.io/cluster: securewatch-kafka
spec:
  partitions: 50
  replicas: 3
  config:
    retention.ms: 7776000000  # 90 days
    segment.ms: 3600000       # 1 hour
    compression.type: zstd
    max.message.bytes: 5242880  # 5MB
    min.insync.replicas: 2

---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: alerts
  namespace: securewatch
  labels:
    strimzi.io/cluster: securewatch-kafka
spec:
  partitions: 20
  replicas: 3
  config:
    retention.ms: 31536000000  # 1 year
    segment.ms: 86400000       # 1 day
    compression.type: zstd
    max.message.bytes: 1048576  # 1MB
    min.insync.replicas: 2

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-metrics
  namespace: securewatch
data:
  kafka-metrics-config.yml: |
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    rules:
    - pattern: kafka.server<type=(.+), name=(.+), clientId=(.+), topic=(.+), partition=(.*)><>Value
      name: kafka_server_$1_$2
      type: GAUGE
      labels:
        clientId: "$3"
        topic: "$4"
        partition: "$5"
    - pattern: kafka.server<type=(.+), name=(.+), clientId=(.+), brokerHost=(.+), brokerPort=(.+)><>Value
      name: kafka_server_$1_$2
      type: GAUGE
      labels:
        clientId: "$3"
        broker: "$4:$5"
    - pattern: kafka.server<type=(.+), name=(.+)><>OneMinuteRate
      name: kafka_server_$1_$2_rate
      type: GAUGE