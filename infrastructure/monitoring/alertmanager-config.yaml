# SecureWatch AlertManager Configuration
# Multi-channel alerting with intelligent routing and grouping

apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring
data:
  alertmanager.yml: |
    global:
      # Global settings
      resolve_timeout: 5m
      
      # SMTP Configuration
      smtp_smarthost: 'smtp.gmail.com:587'
      smtp_from: 'alerts@securewatch.com'
      smtp_auth_username: 'alerts@securewatch.com'
      smtp_auth_password: '${SMTP_PASSWORD}'
      smtp_require_tls: true
      
      # Slack Configuration
      slack_api_url: '${SLACK_WEBHOOK_URL}'
      
      # PagerDuty Configuration
      pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'

    # Templates for notifications
    templates:
    - '/etc/alertmanager/templates/*.tmpl'

    # Routing tree
    route:
      # Default receiver
      receiver: 'default-receiver'
      
      # Group alerts by these labels
      group_by: ['alertname', 'cluster', 'service', 'severity']
      
      # Wait before sending grouped alerts
      group_wait: 30s
      
      # Wait before sending new alerts for a group
      group_interval: 5m
      
      # Wait before resending alerts
      repeat_interval: 12h
      
      # Child routes for specific routing
      routes:
      # Critical alerts - immediate escalation
      - match:
          severity: critical
        receiver: 'critical-receiver'
        group_wait: 10s
        group_interval: 1m
        repeat_interval: 1h
        continue: true
        
      # Security alerts - security team
      - match:
          team: security
        receiver: 'security-receiver'
        group_wait: 10s
        continue: true
        
      # Database alerts - data team
      - match_re:
          alertname: '^(Database|Postgres|ElasticSearch).*'
        receiver: 'database-receiver'
        group_interval: 5m
        continue: true
        
      # Infrastructure alerts - SRE team
      - match:
          team: infrastructure
        receiver: 'infrastructure-receiver'
        group_interval: 10m
        
      # Business hours only alerts
      - match:
          severity: warning
        receiver: 'business-hours-receiver'
        active_time_intervals:
        - 'business-hours'
        
      # Weekend on-call
      - match:
          severity: critical
        receiver: 'on-call-receiver'
        active_time_intervals:
        - 'weekends'
        - 'after-hours'

    # Inhibition rules
    inhibit_rules:
    # Inhibit warning alerts if critical alert is firing
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['alertname', 'cluster', 'service']
      
    # Inhibit all alerts if cluster is down
    - source_match:
        alertname: 'ClusterDown'
      target_match_re:
        alertname: '.*'
      equal: ['cluster']
      
    # Inhibit service alerts if node is down
    - source_match:
        alertname: 'NodeDown'
      target_match:
        alertname: 'ServiceDown'
      equal: ['node']

    # Time intervals
    time_intervals:
    - name: 'business-hours'
      time_intervals:
      - times:
        - start_time: '09:00'
          end_time: '18:00'
        weekdays: ['monday:friday']
        location: 'America/Los_Angeles'
        
    - name: 'weekends'
      time_intervals:
      - weekdays: ['saturday', 'sunday']
        location: 'America/Los_Angeles'
        
    - name: 'after-hours'
      time_intervals:
      - times:
        - start_time: '18:00'
          end_time: '23:59'
        - start_time: '00:00'
          end_time: '09:00'
        weekdays: ['monday:friday']
        location: 'America/Los_Angeles'

    # Receivers
    receivers:
    # Default receiver
    - name: 'default-receiver'
      email_configs:
      - to: 'alerts@securewatch.com'
        headers:
          Subject: 'SecureWatch Alert: {{ .GroupLabels.alertname }}'
        html: '{{ template "email.default.html" . }}'
        text: '{{ template "email.default.text" . }}'
      slack_configs:
      - channel: '#alerts'
        title: 'SecureWatch Alert'
        text: '{{ template "slack.default.text" . }}'
        color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
        send_resolved: true
        
    # Critical alerts receiver
    - name: 'critical-receiver'
      pagerduty_configs:
      - service_key: '${PAGERDUTY_SERVICE_KEY}'
        description: '{{ .GroupLabels.alertname }}: {{ .CommonAnnotations.summary }}'
        details:
          severity: '{{ .CommonLabels.severity }}'
          service: '{{ .CommonLabels.service }}'
          cluster: '{{ .CommonLabels.cluster }}'
          runbook: '{{ .CommonAnnotations.runbook_url }}'
      email_configs:
      - to: 'critical-alerts@securewatch.com'
        headers:
          Subject: '[CRITICAL] {{ .GroupLabels.alertname }}'
          Priority: 'urgent'
          X-Priority: '1'
      slack_configs:
      - channel: '#critical-alerts'
        username: 'AlertManager Critical'
        icon_emoji: ':rotating_light:'
        title: 'CRITICAL: {{ .GroupLabels.alertname }}'
        text: '{{ .CommonAnnotations.summary }}'
        color: 'danger'
        actions:
        - type: 'button'
          text: 'View Runbook'
          url: '{{ .CommonAnnotations.runbook_url }}'
        - type: 'button'
          text: 'Silence Alert'
          url: '{{ template "silence.url" . }}'
      webhook_configs:
      - url: 'https://api.securewatch.com/webhooks/alerts'
        send_resolved: true
        
    # Security team receiver
    - name: 'security-receiver'
      email_configs:
      - to: 'security-team@securewatch.com'
        headers:
          Subject: '[SECURITY] {{ .GroupLabels.alertname }}'
          X-Security-Alert: 'true'
      slack_configs:
      - channel: '#security-alerts'
        username: 'Security Bot'
        icon_emoji: ':shield:'
        title: 'Security Alert: {{ .GroupLabels.alertname }}'
        text: |
          *Summary:* {{ .CommonAnnotations.summary }}
          *Severity:* {{ .CommonLabels.severity }}
          *Details:* {{ .CommonAnnotations.description }}
        fields:
        - title: 'Source IP'
          value: '{{ .CommonLabels.source_ip }}'
          short: true
        - title: 'User'
          value: '{{ .CommonLabels.user }}'
          short: true
      opsgenie_configs:
      - api_key: '${OPSGENIE_API_KEY}'
        teams: ['security-team']
        priority: 'P{{ if eq .CommonLabels.severity "critical" }}1{{ else if eq .CommonLabels.severity "warning" }}3{{ else }}5{{ end }}'
        
    # Database team receiver
    - name: 'database-receiver'
      email_configs:
      - to: 'database-team@securewatch.com'
      slack_configs:
      - channel: '#database-alerts'
        title: 'Database Alert: {{ .GroupLabels.alertname }}'
        fields:
        - title: 'Database'
          value: '{{ .CommonLabels.database }}'
          short: true
        - title: 'Instance'
          value: '{{ .CommonLabels.instance }}'
          short: true
          
    # Infrastructure team receiver
    - name: 'infrastructure-receiver'
      email_configs:
      - to: 'sre-team@securewatch.com'
      slack_configs:
      - channel: '#infrastructure-alerts'
        title: 'Infrastructure Alert: {{ .GroupLabels.alertname }}'
        
    # Business hours receiver
    - name: 'business-hours-receiver'
      email_configs:
      - to: 'ops-team@securewatch.com'
        headers:
          Subject: '[WARNING] {{ .GroupLabels.alertname }}'
          
    # On-call receiver
    - name: 'on-call-receiver'
      pagerduty_configs:
      - service_key: '${PAGERDUTY_ONCALL_KEY}'
      victorops_configs:
      - api_key: '${VICTOROPS_API_KEY}'
        routing_key: 'securewatch-oncall'
        entity_display_name: '{{ .GroupLabels.alertname }}'
        state_message: '{{ .CommonAnnotations.summary }}'

---
# AlertManager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  replicas: 3
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      labels:
        app: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: prom/alertmanager:v0.26.0
        args:
        - '--config.file=/etc/alertmanager/alertmanager.yml'
        - '--storage.path=/alertmanager'
        - '--cluster.listen-address=0.0.0.0:9094'
        - '--cluster.advertise-address=$(POD_IP):9094'
        - '--cluster.peer=alertmanager-0.alertmanager:9094'
        - '--cluster.peer=alertmanager-1.alertmanager:9094'
        - '--cluster.peer=alertmanager-2.alertmanager:9094'
        ports:
        - containerPort: 9093
          name: web
        - containerPort: 9094
          name: cluster
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: smtp-password
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: slack-webhook-url
        - name: PAGERDUTY_SERVICE_KEY
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: pagerduty-service-key
        - name: PAGERDUTY_ONCALL_KEY
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: pagerduty-oncall-key
        - name: OPSGENIE_API_KEY
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: opsgenie-api-key
        - name: VICTOROPS_API_KEY
          valueFrom:
            secretKeyRef:
              name: alertmanager-secrets
              key: victorops-api-key
        volumeMounts:
        - name: config
          mountPath: /etc/alertmanager
        - name: templates
          mountPath: /etc/alertmanager/templates
        - name: storage
          mountPath: /alertmanager
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9093
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9093
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: alertmanager-config
      - name: templates
        configMap:
          name: alertmanager-templates
      - name: storage
        emptyDir: {}

---
# AlertManager Service
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: monitoring
spec:
  selector:
    app: alertmanager
  ports:
  - name: web
    port: 9093
    targetPort: 9093
  - name: cluster
    port: 9094
    targetPort: 9094

---
# AlertManager Templates
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-templates
  namespace: monitoring
data:
  email.default.html: |
    {{ define "email.default.html" }}
    <!DOCTYPE html>
    <html>
    <head>
      <style>
        body { font-family: Arial, sans-serif; }
        .alert { border: 1px solid #ddd; margin: 10px 0; padding: 10px; }
        .firing { background-color: #ffebee; border-color: #f44336; }
        .resolved { background-color: #e8f5e9; border-color: #4caf50; }
        .label { display: inline-block; padding: 2px 6px; margin: 2px; background-color: #e0e0e0; border-radius: 3px; }
      </style>
    </head>
    <body>
      <h2>SecureWatch Alert Notification</h2>
      <p><strong>Alert:</strong> {{ .GroupLabels.alertname }}</p>
      <p><strong>Status:</strong> {{ .Status }}</p>
      
      {{ range .Alerts }}
      <div class="alert {{ .Status }}">
        <h3>{{ .Labels.alertname }}</h3>
        <p><strong>Summary:</strong> {{ .Annotations.summary }}</p>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
        <p><strong>Started:</strong> {{ .StartsAt.Format "2006-01-02 15:04:05 MST" }}</p>
        {{ if .EndsAt }}
        <p><strong>Ended:</strong> {{ .EndsAt.Format "2006-01-02 15:04:05 MST" }}</p>
        {{ end }}
        
        <p><strong>Labels:</strong></p>
        {{ range .Labels.SortedPairs }}
        <span class="label">{{ .Name }}: {{ .Value }}</span>
        {{ end }}
        
        {{ if .Annotations.runbook_url }}
        <p><a href="{{ .Annotations.runbook_url }}">View Runbook</a></p>
        {{ end }}
      </div>
      {{ end }}
      
      <hr>
      <p><small>Sent by SecureWatch AlertManager</small></p>
    </body>
    </html>
    {{ end }}
    
  email.default.text: |
    {{ define "email.default.text" }}
    SecureWatch Alert Notification
    
    Alert: {{ .GroupLabels.alertname }}
    Status: {{ .Status }}
    
    {{ range .Alerts }}
    ---
    Alert: {{ .Labels.alertname }}
    Summary: {{ .Annotations.summary }}
    Description: {{ .Annotations.description }}
    Severity: {{ .Labels.severity }}
    Started: {{ .StartsAt.Format "2006-01-02 15:04:05 MST" }}
    {{ if .EndsAt }}Ended: {{ .EndsAt.Format "2006-01-02 15:04:05 MST" }}{{ end }}
    
    Labels:
    {{ range .Labels.SortedPairs }}  {{ .Name }}: {{ .Value }}
    {{ end }}
    
    {{ if .Annotations.runbook_url }}Runbook: {{ .Annotations.runbook_url }}{{ end }}
    {{ end }}
    
    --
    Sent by SecureWatch AlertManager
    {{ end }}
    
  slack.default.text: |
    {{ define "slack.default.text" }}
    {{ range .Alerts }}
    *Alert:* {{ .Labels.alertname }}
    *Summary:* {{ .Annotations.summary }}
    *Description:* {{ .Annotations.description }}
    *Severity:* {{ .Labels.severity }}
    *Status:* {{ .Status }}
    *Started:* {{ .StartsAt.Format "15:04:05 MST" }}
    {{ if .Annotations.runbook_url }}*Runbook:* <{{ .Annotations.runbook_url }}|View Runbook>{{ end }}
    {{ end }}
    {{ end }}
    
  silence.url: |
    {{ define "silence.url" }}
    {{ .ExternalURL }}/#/silences/new?filter=%7B{{ range .CommonLabels.SortedPairs }}{{ if ne .Name "alertname" }}{{ .Name }}%3D%22{{ .Value }}%22%2C%20{{ end }}{{ end }}alertname%3D%22{{ .GroupLabels.alertname }}%22%7D
    {{ end }}

---
# AlertManager Secrets
apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-secrets
  namespace: monitoring
type: Opaque
data:
  smtp-password: cGFzc3dvcmQ=  # base64 encoded
  slack-webhook-url: aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvWFhYWFgvWVlZWVkvWlpaWlo=  # base64 encoded
  pagerduty-service-key: WFhYWFhYWFhYWFhYWFhYWFhYWFhY  # base64 encoded
  pagerduty-oncall-key: WVlZWVlZWVlZWVlZWVlZWVlZWVlZ  # base64 encoded
  opsgenie-api-key: WlpaWlpaWlpaWlpaWlpaWlpaWlpaWlo=  # base64 encoded
  victorops-api-key: QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUE=  # base64 encoded