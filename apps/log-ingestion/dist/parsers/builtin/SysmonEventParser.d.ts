import { LogParser, ParsedEvent, NormalizedEvent } from '../types';
export declare class SysmonEventParser implements LogParser {
    id: string;
    name: string;
    vendor: string;
    logSource: string;
    version: string;
    format: "xml";
    category: "endpoint";
    priority: number;
    enabled: boolean;
    private readonly eventIdMapping;
    private readonly attackPatterns;
    private readonly suspiciousProcesses;
    validate(rawLog: string): boolean;
    parse(rawLog: string): ParsedEvent | null;
    normalize(event: ParsedEvent): NormalizedEvent;
    private extractEventId;
    private extractTimestamp;
    private extractComputer;
    private extractRuleName;
    private extractEventData;
    private extractProcessInfo;
    private extractNetworkInfo;
    private extractFileInfo;
    private extractRegistryInfo;
    private detectThreats;
    private detectFromRuleName;
    private getTacticsForTechnique;
    private calculateThreatSeverity;
    private calculateEventConfidence;
    private getFileName;
    private getDirectoryName;
    private getNetworkDirection;
    private isPrivateIP;
    private getCategoryForEventId;
    private getActionForEventId;
    private getSeverityForEventId;
    private mapToECSCategory;
    private mapToECSType;
    private mapSeverityToNumber;
    private getTagsForEvent;
    private extractRelatedIPs;
    private extractRelatedUsers;
    private extractRelatedHashes;
}
//# sourceMappingURL=SysmonEventParser.d.ts.map