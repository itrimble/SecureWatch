"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Progress } from "@/components/ui/progress"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Input } from "@/components/ui/input"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip"
import {
  Shield,
  AlertTriangle,
  Search,
  Download,
  Filter,
  RefreshCw,
  Clock,
  Server,
  Laptop,
  CheckCircle,
  BarChart3,
  Calendar,
  ChevronDown,
  ChevronUp,
  ExternalLink,
  Eye,
} from "lucide-react"

export function VulnerabilityDashboard() {
  const [searchTerm, setSearchTerm] = useState("")
  const [filterSeverity, setFilterSeverity] = useState("all")
  const [filterStatus, setFilterStatus] = useState("all")
  const [expandedVuln, setExpandedVuln] = useState<string | null>(null)

  const vulnStats = {
    totalVulnerabilities: 1247,
    criticalVulnerabilities: 28,
    highVulnerabilities: 156,
    patchedLast30Days: 345,
    averagePatchTime: "4.2 days",
    complianceRate: 87,
  }

  const vulnerabilities = [
    {
      id: "CVE-2023-12345",
      name: "Apache Log4j Remote Code Execution",
      severity: "critical",
      cvss: 9.8,
      status: "patched",
      affectedSystems: 45,
      patchedSystems: 45,
      discoveryDate: "2023-12-10",
      patchDate: "2023-12-15",
      category: "Remote Code Execution",
      description:
        "A remote code execution vulnerability in Apache Log4j allows attackers to execute arbitrary code by sending a specially crafted request.",
      affectedProducts: ["Apache Log4j 2.0-2.14.1"],
      remediation: "Upgrade to Log4j 2.15.0 or later",
      references: [
        "https://nvd.nist.gov/vuln/detail/CVE-2021-44228",
        "https://logging.apache.org/log4j/2.x/security.html",
      ],
    },
    {
      id: "CVE-2023-67890",
      name: "Windows Print Spooler Privilege Escalation",
      severity: "critical",
      cvss: 8.8,
      status: "in_progress",
      affectedSystems: 78,
      patchedSystems: 45,
      discoveryDate: "2023-11-15",
      patchDate: null,
      category: "Privilege Escalation",
      description:
        "A privilege escalation vulnerability in Windows Print Spooler allows local attackers to gain SYSTEM privileges.",
      affectedProducts: ["Windows Server 2019", "Windows Server 2016", "Windows 10"],
      remediation: "Apply Microsoft security update KB5005652",
      references: ["https://msrc.microsoft.com/update-guide/vulnerability/CVE-2023-67890"],
    },
    {
      id: "CVE-2023-54321",
      name: "Cisco IOS XE Software Command Injection",
      severity: "high",
      cvss: 7.8,
      status: "not_patched",
      affectedSystems: 12,
      patchedSystems: 0,
      discoveryDate: "2023-10-20",
      patchDate: null,
      category: "Command Injection",
      description:
        "A command injection vulnerability in Cisco IOS XE Software could allow an authenticated attacker to execute arbitrary commands with elevated privileges.",
      affectedProducts: ["Cisco IOS XE Software 16.9.1", "Cisco IOS XE Software 17.3.1"],
      remediation: "Upgrade to Cisco IOS XE Software 17.3.2 or later",
      references: ["https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20231020-iosxe"],
    },
    {
      id: "CVE-2023-98765",
      name: "VMware vCenter Server Authentication Bypass",
      severity: "high",
      cvss: 8.2,
      status: "patched",
      affectedSystems: 8,
      patchedSystems: 8,
      discoveryDate: "2023-09-05",
      patchDate: "2023-09-10",
      category: "Authentication Bypass",
      description:
        "An authentication bypass vulnerability in VMware vCenter Server allows attackers to access the system without valid credentials.",
      affectedProducts: ["VMware vCenter Server 7.0", "VMware vCenter Server 6.7"],
      remediation: "Apply VMware security patch VMSA-2023-0020",
      references: ["https://www.vmware.com/security/advisories/VMSA-2023-0020.html"],
    },
    {
      id: "CVE-2023-24680",
      name: "Oracle WebLogic Server Deserialization",
      severity: "medium",
      cvss: 6.5,
      status: "in_progress",
      affectedSystems: 15,
      patchedSystems: 8,
      discoveryDate: "2023-08-15",
      patchDate: null,
      category: "Deserialization",
      description:
        "A deserialization vulnerability in Oracle WebLogic Server allows remote attackers to execute arbitrary code.",
      affectedProducts: ["Oracle WebLogic Server 12.2.1.3", "Oracle WebLogic Server 12.2.1.4"],
      remediation: "Apply Oracle Critical Patch Update - October 2023",
      references: ["https://www.oracle.com/security-alerts/cpuoct2023.html"],
    },
  ]

  const patchingProgress = [
    {
      severity: "Critical",
      total: 28,
      patched: 25,
      percentage: 89,
    },
    {
      severity: "High",
      total: 156,
      patched: 132,
      percentage: 85,
    },
    {
      severity: "Medium",
      total: 423,
      patched: 345,
      percentage: 82,
    },
    {
      severity: "Low",
      total: 640,
      patched: 598,
      percentage: 93,
    },
  ]

  const topVulnerableSystems = [
    {
      name: "WEB-SERVER-01",
      type: "server",
      vulnerabilities: 12,
      criticalVulnerabilities: 3,
      patchCompliance: 75,
    },
    {
      name: "DB-SERVER-04",
      type: "server",
      vulnerabilities: 8,
      criticalVulnerabilities: 2,
      patchCompliance: 80,
    },
    {
      name: "WORKSTATION-045",
      type: "workstation",
      vulnerabilities: 15,
      criticalVulnerabilities: 1,
      patchCompliance: 65,
    },
    {
      name: "FIREWALL-EDGE-01",
      type: "network",
      vulnerabilities: 6,
      criticalVulnerabilities: 2,
      patchCompliance: 70,
    },
    {
      name: "APP-SERVER-02",
      type: "server",
      vulnerabilities: 9,
      criticalVulnerabilities: 1,
      patchCompliance: 78,
    },
  ]

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case "critical":
        return "bg-red-600 text-white"
      case "high":
        return "bg-orange-600 text-white"
      case "medium":
        return "bg-yellow-600 text-white"
      case "low":
        return "bg-green-600 text-white"
      default:
        return "bg-gray-600 text-white"
    }
  }

  const getStatusColor = (status: string) => {
    switch (status) {
      case "patched":
        return "bg-green-600 text-white"
      case "in_progress":
        return "bg-yellow-600 text-white"
      case "not_patched":
        return "bg-red-600 text-white"
      default:
        return "bg-gray-600 text-white"
    }
  }

  const getStatusLabel = (status: string) => {
    switch (status) {
      case "patched":
        return "Patched"
      case "in_progress":
        return "In Progress"
      case "not_patched":
        return "Not Patched"
      default:
        return status
    }
  }

  const getTypeIcon = (type: string) => {
    switch (type) {
      case "server":
        return Server
      case "workstation":
        return Laptop
      default:
        return Server
    }
  }

  const filteredVulnerabilities = vulnerabilities.filter((vuln) => {
    const matchesSearch =
      vuln.id.toLowerCase().includes(searchTerm.toLowerCase()) ||
      vuln.name.toLowerCase().includes(searchTerm.toLowerCase())
    const matchesSeverity = filterSeverity === "all" || vuln.severity === filterSeverity
    const matchesStatus = filterStatus === "all" || vuln.status === filterStatus
    return matchesSearch && matchesSeverity && matchesStatus
  })

  return (
    <TooltipProvider>
      <div className="p-6 space-y-6 bg-background min-h-screen">
        {/* Header */}
        <div className="flex items-center justify-between">
          <div>
            <h1 className="text-3xl font-bold flex items-center gap-2">
              <Shield className="h-8 w-8" />
              Vulnerability Management
            </h1>
            <p className="text-muted-foreground">Track, prioritize, and remediate security vulnerabilities</p>
          </div>
          <div className="flex items-center gap-2">
            <Tooltip>
              <TooltipTrigger asChild>
                <Button variant="outline" size="icon">
                  <RefreshCw className="h-4 w-4" />
                </Button>
              </TooltipTrigger>
              <TooltipContent>Refresh Data</TooltipContent>
            </Tooltip>
            <Button>
              <Download className="h-4 w-4 mr-2" />
              Export Report
            </Button>
          </div>
        </div>

        {/* Key Metrics */}
        <div className="grid grid-cols-1 md:grid-cols-6 gap-4">
          <Card className="hover:shadow-lg transition-all duration-200">
            <CardContent className="p-6 text-center">
              <div className="text-2xl font-bold text-blue-600">{vulnStats.totalVulnerabilities.toLocaleString()}</div>
              <div className="text-sm text-muted-foreground">Total Vulnerabilities</div>
            </CardContent>
          </Card>
          <Card className="hover:shadow-lg transition-all duration-200">
            <CardContent className="p-6 text-center">
              <div className="text-2xl font-bold text-red-600">{vulnStats.criticalVulnerabilities}</div>
              <div className="text-sm text-muted-foreground">Critical</div>
            </CardContent>
          </Card>
          <Card className="hover:shadow-lg transition-all duration-200">
            <CardContent className="p-6 text-center">
              <div className="text-2xl font-bold text-orange-600">{vulnStats.highVulnerabilities}</div>
              <div className="text-sm text-muted-foreground">High</div>
            </CardContent>
          </Card>
          <Card className="hover:shadow-lg transition-all duration-200">
            <CardContent className="p-6 text-center">
              <div className="text-2xl font-bold text-green-600">{vulnStats.patchedLast30Days}</div>
              <div className="text-sm text-muted-foreground">Patched (30d)</div>
            </CardContent>
          </Card>
          <Card className="hover:shadow-lg transition-all duration-200">
            <CardContent className="p-6 text-center">
              <div className="text-2xl font-bold text-purple-600">{vulnStats.averagePatchTime}</div>
              <div className="text-sm text-muted-foreground">Avg Patch Time</div>
            </CardContent>
          </Card>
          <Card className="hover:shadow-lg transition-all duration-200">
            <CardContent className="p-6 text-center">
              <div className="text-2xl font-bold text-blue-600">{vulnStats.complianceRate}%</div>
              <div className="text-sm text-muted-foreground">Compliance Rate</div>
            </CardContent>
          </Card>
        </div>

        <Tabs defaultValue="overview" className="space-y-6">
          <TabsList className="grid w-full grid-cols-4">
            <TabsTrigger value="overview">Overview</TabsTrigger>
            <TabsTrigger value="vulnerabilities">Vulnerabilities</TabsTrigger>
            <TabsTrigger value="systems">Vulnerable Systems</TabsTrigger>
            <TabsTrigger value="trends">Trends & Reports</TabsTrigger>
          </TabsList>

          <TabsContent value="overview" className="space-y-6">
            {/* Patching Progress */}
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
              <Card className="lg:col-span-2">
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <BarChart3 className="h-5 w-5" />
                    Patching Progress by Severity
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-6">
                    {patchingProgress.map((item) => (
                      <div key={item.severity} className="space-y-2">
                        <div className="flex items-center justify-between">
                          <div className="flex items-center gap-2">
                            <div
                              className={`w-3 h-3 rounded-full ${
                                item.severity === "Critical"
                                  ? "bg-red-600"
                                  : item.severity === "High"
                                    ? "bg-orange-600"
                                    : item.severity === "Medium"
                                      ? "bg-yellow-600"
                                      : "bg-green-600"
                              }`}
                            />
                            <span className="font-medium">{item.severity}</span>
                          </div>
                          <div className="flex items-center gap-2">
                            <span className="text-sm text-muted-foreground">
                              {item.patched} of {item.total} patched
                            </span>
                            <span className="font-medium">{item.percentage}%</span>
                          </div>
                        </div>
                        <Progress value={item.percentage} className="h-2" />
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Calendar className="h-5 w-5" />
                    Patching Timeline
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex items-center justify-between p-3 bg-muted/50 rounded">
                      <span className="font-medium">Last Scan</span>
                      <span>2 hours ago</span>
                    </div>
                    <div className="flex items-center justify-between p-3 bg-muted/50 rounded">
                      <span className="font-medium">Next Scan</span>
                      <span>10 hours</span>
                    </div>
                    <div className="flex items-center justify-between p-3 bg-muted/50 rounded">
                      <span className="font-medium">Critical Patch SLA</span>
                      <span className="text-green-600 font-medium">3 days</span>
                    </div>
                    <div className="flex items-center justify-between p-3 bg-muted/50 rounded">
                      <span className="font-medium">High Patch SLA</span>
                      <span className="text-green-600 font-medium">7 days</span>
                    </div>
                    <div className="flex items-center justify-between p-3 bg-muted/50 rounded">
                      <span className="font-medium">Medium Patch SLA</span>
                      <span className="text-yellow-600 font-medium">14 days</span>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* Top Vulnerable Systems */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <AlertTriangle className="h-5 w-5" />
                  Top Vulnerable Systems
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                  {topVulnerableSystems.map((system, index) => {
                    const TypeIcon = getTypeIcon(system.type)
                    return (
                      <Card key={index} className="hover:shadow-md transition-all duration-200">
                        <CardContent className="p-4">
                          <div className="flex items-center justify-between mb-3">
                            <div className="flex items-center gap-2">
                              <TypeIcon className="h-5 w-5 text-muted-foreground" />
                              <h3 className="font-semibold">{system.name}</h3>
                            </div>
                            <Badge variant="outline" className="capitalize">
                              {system.type}
                            </Badge>
                          </div>
                          <div className="space-y-2">
                            <div className="flex items-center justify-between text-sm">
                              <span>Total Vulnerabilities</span>
                              <span className="font-medium">{system.vulnerabilities}</span>
                            </div>
                            <div className="flex items-center justify-between text-sm">
                              <span>Critical Vulnerabilities</span>
                              <span className="font-medium text-red-600">{system.criticalVulnerabilities}</span>
                            </div>
                            <div className="flex items-center justify-between text-sm">
                              <span>Patch Compliance</span>
                              <span className="font-medium">{system.patchCompliance}%</span>
                            </div>
                            <Progress value={system.patchCompliance} className="h-1 mt-1" />
                          </div>
                        </CardContent>
                      </Card>
                    )
                  })}
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="vulnerabilities" className="space-y-6">
            {/* Filters */}
            <Card>
              <CardContent className="p-6">
                <div className="flex flex-col md:flex-row gap-4">
                  <div className="flex-1">
                    <div className="relative">
                      <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
                      <Input
                        placeholder="Search vulnerabilities by CVE ID or name..."
                        value={searchTerm}
                        onChange={(e) => setSearchTerm(e.target.value)}
                        className="pl-10"
                      />
                    </div>
                  </div>
                  <Select value={filterSeverity} onValueChange={setFilterSeverity}>
                    <SelectTrigger className="w-40">
                      <SelectValue placeholder="Severity" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="all">All Severities</SelectItem>
                      <SelectItem value="critical">Critical</SelectItem>
                      <SelectItem value="high">High</SelectItem>
                      <SelectItem value="medium">Medium</SelectItem>
                      <SelectItem value="low">Low</SelectItem>
                    </SelectContent>
                  </Select>
                  <Select value={filterStatus} onValueChange={setFilterStatus}>
                    <SelectTrigger className="w-40">
                      <SelectValue placeholder="Status" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="all">All Status</SelectItem>
                      <SelectItem value="patched">Patched</SelectItem>
                      <SelectItem value="in_progress">In Progress</SelectItem>
                      <SelectItem value="not_patched">Not Patched</SelectItem>
                    </SelectContent>
                  </Select>
                  <Button variant="outline">
                    <Filter className="h-4 w-4 mr-2" />
                    More Filters
                  </Button>
                </div>
              </CardContent>
            </Card>

            {/* Vulnerabilities List */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Shield className="h-5 w-5" />
                  Vulnerabilities ({filteredVulnerabilities.length})
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  {filteredVulnerabilities.map((vuln) => (
                    <Card key={vuln.id} className="hover:shadow-md transition-all duration-200">
                      <CardContent className="p-4">
                        <div className="space-y-4">
                          {/* Vulnerability Header */}
                          <div className="flex items-start justify-between">
                            <div className="flex-1">
                              <div className="flex items-center gap-2 mb-2">
                                <h3 className="font-semibold">{vuln.name}</h3>
                                <Badge className={getSeverityColor(vuln.severity)}>{vuln.severity}</Badge>
                                <Badge variant="outline">{vuln.id}</Badge>
                              </div>
                              <p className="text-sm text-muted-foreground mb-2">{vuln.description}</p>
                              <div className="flex items-center gap-4 text-xs text-muted-foreground">
                                <div className="flex items-center gap-1">
                                  <Clock className="h-3 w-3" />
                                  <span>Discovered: {vuln.discoveryDate}</span>
                                </div>
                                <div className="flex items-center gap-1">
                                  <AlertTriangle className="h-3 w-3" />
                                  <span>CVSS: {vuln.cvss}</span>
                                </div>
                                <div className="flex items-center gap-1">
                                  <Server className="h-3 w-3" />
                                  <span>
                                    Affected: {vuln.patchedSystems}/{vuln.affectedSystems} patched
                                  </span>
                                </div>
                              </div>
                            </div>
                            <div className="flex items-center gap-3">
                              <Badge className={getStatusColor(vuln.status)}>{getStatusLabel(vuln.status)}</Badge>
                              <Button
                                variant="ghost"
                                size="icon"
                                onClick={() => setExpandedVuln(expandedVuln === vuln.id ? null : vuln.id)}
                              >
                                {expandedVuln === vuln.id ? (
                                  <ChevronUp className="h-4 w-4" />
                                ) : (
                                  <ChevronDown className="h-4 w-4" />
                                )}
                              </Button>
                            </div>
                          </div>

                          {/* Patching Progress */}
                          <div>
                            <div className="flex justify-between text-xs mb-1">
                              <span>Patching Progress</span>
                              <span>
                                {vuln.patchedSystems}/{vuln.affectedSystems} systems (
                                {Math.round((vuln.patchedSystems / vuln.affectedSystems) * 100)}%)
                              </span>
                            </div>
                            <Progress
                              value={Math.round((vuln.patchedSystems / vuln.affectedSystems) * 100)}
                              className="h-1"
                            />
                          </div>

                          {/* Expanded Details */}
                          {expandedVuln === vuln.id && (
                            <div className="border-t pt-4 space-y-4">
                              <div>
                                <h4 className="font-semibold mb-2">Affected Products</h4>
                                <div className="flex flex-wrap gap-1">
                                  {vuln.affectedProducts.map((product, index) => (
                                    <Badge key={index} variant="outline" className="text-xs">
                                      {product}
                                    </Badge>
                                  ))}
                                </div>
                              </div>

                              <div>
                                <h4 className="font-semibold mb-2">Remediation</h4>
                                <p className="text-sm">{vuln.remediation}</p>
                              </div>

                              <div>
                                <h4 className="font-semibold mb-2">References</h4>
                                <ul className="list-disc list-inside space-y-1 text-sm">
                                  {vuln.references.map((ref, index) => (
                                    <li key={index}>
                                      <a
                                        href={ref}
                                        target="_blank"
                                        rel="noopener noreferrer"
                                        className="text-blue-600 hover:underline flex items-center gap-1"
                                      >
                                        {ref.replace(/^https?:\/\//, "").split("/")[0]}
                                        <ExternalLink className="h-3 w-3" />
                                      </a>
                                    </li>
                                  ))}
                                </ul>
                              </div>

                              <div className="flex justify-end gap-2">
                                <Button size="sm" variant="outline">
                                  <Eye className="h-4 w-4 mr-2" />
                                  View Details
                                </Button>
                                {vuln.status !== "patched" && (
                                  <Button size="sm">
                                    <CheckCircle className="h-4 w-4 mr-2" />
                                    Mark as Patched
                                  </Button>
                                )}
                              </div>
                            </div>
                          )}
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="systems" className="space-y-6">
            {/* Vulnerable Systems */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Server className="h-5 w-5" />
                  Vulnerable Systems
                </CardTitle>
              </CardHeader>
              <CardContent>
                <Table>
                  <TableHeader>
                    <TableRow>
                      <TableHead>System</TableHead>
                      <TableHead>Type</TableHead>
                      <TableHead>Total Vulnerabilities</TableHead>
                      <TableHead>Critical</TableHead>
                      <TableHead>High</TableHead>
                      <TableHead>Medium</TableHead>
                      <TableHead>Low</TableHead>
                      <TableHead>Compliance</TableHead>
                      <TableHead>Last Scan</TableHead>
                      <TableHead>Actions</TableHead>
                    </TableRow>
                  </TableHeader>
                  <TableBody>
                    {topVulnerableSystems.map((system, index) => {
                      const TypeIcon = getTypeIcon(system.type)
                      return (
                        <TableRow key={index}>
                          <TableCell>
                            <div className="flex items-center gap-2">
                              <TypeIcon className="h-4 w-4 text-muted-foreground" />
                              <span className="font-medium">{system.name}</span>
                            </div>
                          </TableCell>
                          <TableCell>
                            <Badge variant="outline" className="capitalize">
                              {system.type}
                            </Badge>
                          </TableCell>
                          <TableCell>{system.vulnerabilities}</TableCell>
                          <TableCell className="text-red-600 font-medium">{system.criticalVulnerabilities}</TableCell>
                          <TableCell>{Math.floor(system.vulnerabilities * 0.3)}</TableCell>
                          <TableCell>{Math.floor(system.vulnerabilities * 0.4)}</TableCell>
                          <TableCell>{Math.floor(system.vulnerabilities * 0.2)}</TableCell>
                          <TableCell>
                            <div className="flex items-center gap-2">
                              <span
                                className={
                                  system.patchCompliance >= 90
                                    ? "text-green-600"
                                    : system.patchCompliance >= 70
                                      ? "text-yellow-600"
                                      : "text-red-600"
                                }
                              >
                                {system.patchCompliance}%
                              </span>
                              <Progress value={system.patchCompliance} className="h-1 w-12" />
                            </div>
                          </TableCell>
                          <TableCell>
                            <div className="flex items-center gap-1">
                              <Clock className="h-3 w-3 text-muted-foreground" />
                              <span className="text-sm">12 hours ago</span>
                            </div>
                          </TableCell>
                          <TableCell>
                            <div className="flex items-center gap-1">
                              <Tooltip>
                                <TooltipTrigger asChild>
                                  <Button variant="ghost" size="icon">
                                    <Eye className="h-4 w-4" />
                                  </Button>
                                </TooltipTrigger>
                                <TooltipContent>View Details</TooltipContent>
                              </Tooltip>
                              <Tooltip>
                                <TooltipTrigger asChild>
                                  <Button variant="ghost" size="icon">
                                    <RefreshCw className="h-4 w-4" />
                                  </Button>
                                </TooltipTrigger>
                                <TooltipContent>Scan Now</TooltipContent>
                              </Tooltip>
                            </div>
                          </TableCell>
                        </TableRow>
                      )
                    })}
                  </TableBody>
                </Table>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="trends" className="space-y-6">
            {/* Vulnerability Trends */}
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <BarChart3 className="h-5 w-5" />
                    Vulnerability Trends
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="h-64 flex items-center justify-center bg-muted/50 rounded-lg">
                    <div className="text-center text-muted-foreground">
                      <BarChart3 className="h-12 w-12 mx-auto mb-4" />
                      <p className="text-lg font-medium">Vulnerability Trend Analysis</p>
                      <p className="text-sm">Historical view of vulnerability discovery and patching</p>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle className="flex items-center gap-2">
                    <Clock className="h-5 w-5" />
                    Patching SLA Compliance
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-6">
                    <div className="space-y-2">
                      <div className="flex items-center justify-between">
                        <span className="font-medium">Critical (3 days)</span>
                        <span className="font-medium text-green-600">95%</span>
                      </div>
                      <Progress value={95} className="h-2" />
                    </div>
                    <div className="space-y-2">
                      <div className="flex items-center justify-between">
                        <span className="font-medium">High (7 days)</span>
                        <span className="font-medium text-green-600">92%</span>
                      </div>
                      <Progress value={92} className="h-2" />
                    </div>
                    <div className="space-y-2">
                      <div className="flex items-center justify-between">
                        <span className="font-medium">Medium (14 days)</span>
                        <span className="font-medium text-yellow-600">85%</span>
                      </div>
                      <Progress value={85} className="h-2" />
                    </div>
                    <div className="space-y-2">
                      <div className="flex items-center justify-between">
                        <span className="font-medium">Low (30 days)</span>
                        <span className="font-medium text-green-600">98%</span>
                      </div>
                      <Progress value={98} className="h-2" />
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </TabsContent>
        </Tabs>
      </div>
    </TooltipProvider>
  )
}
