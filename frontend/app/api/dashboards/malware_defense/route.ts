import { NextResponse } from 'next/server';

// Mock malware defense dashboard data
const mockMalwareData = {
  totalScans: 45621,
  threatsDetected: 127,
  threatsBlocked: 124,
  detectionRate: 97.6,
  quarantineItems: 89,
  threatsByType: [
    { type: 'Trojan', count: 45, percentage: 35.4 },
    { type: 'Virus', count: 32, percentage: 25.2 },
    { type: 'Malware', count: 28, percentage: 22.0 },
    { type: 'Adware', count: 15, percentage: 11.8 },
    { type: 'Spyware', count: 7, percentage: 5.5 }
  ],
  scanActivity: [
    { date: '2025-06-01', scans: 1847, threats: 12 },
    { date: '2025-06-02', scans: 1923, threats: 8 },
    { date: '2025-06-03', scans: 2156, threats: 15 },
    { date: '2025-06-04', scans: 2089, threats: 23 },
    { date: '2025-06-05', scans: 1567, threats: 7 }
  ],
  topThreats: [
    {
      name: 'Win32.Generic.Malware',
      detections: 23,
      severity: 'High',
      lastSeen: '2025-06-05T01:15:30Z'
    },
    {
      name: 'Trojan.Agent.XPAK',
      detections: 18,
      severity: 'Critical',
      lastSeen: '2025-06-05T00:45:12Z'
    },
    {
      name: 'Adware.Generic',
      detections: 15,
      severity: 'Medium',
      lastSeen: '2025-06-04T23:30:45Z'
    },
    {
      name: 'Virus.Win32.Sality',
      detections: 12,
      severity: 'High',
      lastSeen: '2025-06-04T22:15:22Z'
    }
  ],
  systemHealth: {
    engineStatus: 'Active',
    lastUpdate: '2025-06-05T00:00:00Z',
    definitionsVersion: '2025.06.05.001',
    scheduledScans: 'Enabled',
    realTimeProtection: 'Enabled'
  },
  recentQuarantine: [
    {
      file: 'suspicious_file.exe',
      threat: 'Trojan.Generic',
      quarantinedAt: '2025-06-05T01:20:15Z',
      source: 'C:\\Downloads\\suspicious_file.exe'
    },
    {
      file: 'malware.dll',
      threat: 'Malware.Generic',
      quarantinedAt: '2025-06-05T00:55:33Z',
      source: 'C:\\Temp\\malware.dll'
    }
  ]
};

export async function GET() {
  try {
    console.log('[API/dashboards/malware_defense] Returning malware defense dashboard data');
    
    return NextResponse.json(mockMalwareData, {
      headers: {
        'X-Data-Source': 'mock-data',
        'X-Dashboard-Type': 'malware_defense'
      }
    });
  } catch (error) {
    console.error('[API/dashboards/malware_defense] Error:', error);
    return NextResponse.json(
      { error: 'Failed to fetch malware defense dashboard data' },
      { status: 500 }
    );
  }
}