{"version":3,"sources":["../src/index.ts","../src/validation.ts","../src/formatting.ts","../src/constants.ts"],"sourcesContent":["// Shared utilities for SecureWatch platform\nexport * from './validation';\nexport * from './formatting';\nexport * from './constants';","import { z } from 'zod';\n\n// Common validation schemas\nexport const emailSchema = z.string().email();\nexport const uuidSchema = z.string().uuid();\n\n// IP address validation\nexport const ipv4Schema = z.string().regex(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);\n\n// Validation utility functions\nexport const validateEmail = (email: string): boolean => {\n  return emailSchema.safeParse(email).success;\n};\n\nexport const validateUUID = (uuid: string): boolean => {\n  return uuidSchema.safeParse(uuid).success;\n};\n\nexport const validateIPv4 = (ip: string): boolean => {\n  return ipv4Schema.safeParse(ip).success;\n};","import { format } from 'date-fns';\n\n// Date formatting utilities\nexport const formatTimestamp = (date: Date | string): string => {\n  const dateObj = typeof date === 'string' ? new Date(date) : date;\n  return format(dateObj, 'yyyy-MM-dd HH:mm:ss');\n};\n\nexport const formatShortDate = (date: Date | string): string => {\n  const dateObj = typeof date === 'string' ? new Date(date) : date;\n  return format(dateObj, 'MMM dd, yyyy');\n};\n\n// Size formatting\nexport const formatBytes = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n// Number formatting\nexport const formatNumber = (num: number): string => {\n  return new Intl.NumberFormat().format(num);\n};","// Common constants for SecureWatch platform\n\nexport const LOG_LEVELS = {\n  ERROR: 'error',\n  WARN: 'warn', \n  INFO: 'info',\n  DEBUG: 'debug'\n} as const;\n\nexport const HTTP_STATUS_CODES = {\n  OK: 200,\n  CREATED: 201,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500\n} as const;\n\nexport const TIME_RANGES = {\n  LAST_HOUR: '1h',\n  LAST_24_HOURS: '24h',\n  LAST_7_DAYS: '7d',\n  LAST_30_DAYS: '30d'\n} as const;\n\nexport const ALERT_SEVERITY = {\n  LOW: 'low',\n  MEDIUM: 'medium',\n  HIGH: 'high',\n  CRITICAL: 'critical'\n} as const;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,iBAAkB;AAGX,IAAM,cAAc,aAAE,OAAO,EAAE,MAAM;AACrC,IAAM,aAAa,aAAE,OAAO,EAAE,KAAK;AAGnC,IAAM,aAAa,aAAE,OAAO,EAAE,MAAM,6FAA6F;AAGjI,IAAM,gBAAgB,CAAC,UAA2B;AACvD,SAAO,YAAY,UAAU,KAAK,EAAE;AACtC;AAEO,IAAM,eAAe,CAAC,SAA0B;AACrD,SAAO,WAAW,UAAU,IAAI,EAAE;AACpC;AAEO,IAAM,eAAe,CAAC,OAAwB;AACnD,SAAO,WAAW,UAAU,EAAE,EAAE;AAClC;;;ACpBA,sBAAuB;AAGhB,IAAM,kBAAkB,CAAC,SAAgC;AAC9D,QAAM,UAAU,OAAO,SAAS,WAAW,IAAI,KAAK,IAAI,IAAI;AAC5D,aAAO,wBAAO,SAAS,qBAAqB;AAC9C;AAEO,IAAM,kBAAkB,CAAC,SAAgC;AAC9D,QAAM,UAAU,OAAO,SAAS,WAAW,IAAI,KAAK,IAAI,IAAI;AAC5D,aAAO,wBAAO,SAAS,cAAc;AACvC;AAGO,IAAM,cAAc,CAAC,UAA0B;AACpD,MAAI,UAAU,EAAG,QAAO;AACxB,QAAM,IAAI;AACV,QAAM,QAAQ,CAAC,SAAS,MAAM,MAAM,MAAM,IAAI;AAC9C,QAAM,IAAI,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,CAAC;AAClD,SAAO,YAAY,QAAQ,KAAK,IAAI,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,MAAM,MAAM,CAAC;AACxE;AAGO,IAAM,eAAe,CAAC,QAAwB;AACnD,SAAO,IAAI,KAAK,aAAa,EAAE,OAAO,GAAG;AAC3C;;;ACvBO,IAAM,aAAa;AAAA,EACxB,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AACT;AAEO,IAAM,oBAAoB;AAAA,EAC/B,IAAI;AAAA,EACJ,SAAS;AAAA,EACT,aAAa;AAAA,EACb,cAAc;AAAA,EACd,WAAW;AAAA,EACX,WAAW;AAAA,EACX,uBAAuB;AACzB;AAEO,IAAM,cAAc;AAAA,EACzB,WAAW;AAAA,EACX,eAAe;AAAA,EACf,aAAa;AAAA,EACb,cAAc;AAChB;AAEO,IAAM,iBAAiB;AAAA,EAC5B,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AACZ;","names":[]}