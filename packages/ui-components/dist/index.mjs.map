{"version":3,"sources":["../src/button.tsx","../src/card.tsx","../src/badge.tsx","../src/alert.tsx"],"sourcesContent":["import React from 'react';\nimport { clsx } from 'clsx';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'danger' | 'ghost';\n  size?: 'sm' | 'md' | 'lg';\n  isLoading?: boolean;\n}\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant = 'primary', size = 'md', isLoading = false, children, disabled, ...props }, ref) => {\n    return (\n      <button\n        className={clsx(\n          'inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none',\n          {\n            'bg-primary text-primary-foreground hover:bg-primary/90': variant === 'primary',\n            'bg-secondary text-secondary-foreground hover:bg-secondary/80': variant === 'secondary',\n            'bg-destructive text-destructive-foreground hover:bg-destructive/90': variant === 'danger',\n            'hover:bg-accent hover:text-accent-foreground': variant === 'ghost',\n            'h-9 px-3 text-sm': size === 'sm',\n            'h-10 px-4 py-2': size === 'md',\n            'h-11 px-8 text-lg': size === 'lg',\n          },\n          className\n        )}\n        ref={ref}\n        disabled={disabled || isLoading}\n        {...props}\n      >\n        {isLoading && (\n          <svg className=\"mr-2 h-4 w-4 animate-spin\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"m4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n        )}\n        {children}\n      </button>\n    );\n  }\n);\n\nButton.displayName = 'Button';","import React from 'react';\nimport { clsx } from 'clsx';\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={clsx('rounded-lg border bg-card text-card-foreground shadow-sm', className)}\n      {...props}\n    />\n  )\n);\n\nCard.displayName = 'Card';\n\nexport interface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const CardHeader = React.forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={clsx('flex flex-col space-y-1.5 p-6', className)} {...props} />\n  )\n);\n\nCardHeader.displayName = 'CardHeader';\n\nexport interface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {}\n\nexport const CardTitle = React.forwardRef<HTMLParagraphElement, CardTitleProps>(\n  ({ className, ...props }, ref) => (\n    <h3 ref={ref} className={clsx('text-2xl font-semibold leading-none tracking-tight', className)} {...props} />\n  )\n);\n\nCardTitle.displayName = 'CardTitle';\n\nexport interface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const CardContent = React.forwardRef<HTMLDivElement, CardContentProps>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={clsx('p-6 pt-0', className)} {...props} />\n  )\n);\n\nCardContent.displayName = 'CardContent';","import React from 'react';\nimport { clsx } from 'clsx';\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'secondary' | 'destructive' | 'outline' | 'success' | 'warning';\n}\n\nexport const Badge = React.forwardRef<HTMLDivElement, BadgeProps>(\n  ({ className, variant = 'default', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n          {\n            'border-transparent bg-primary text-primary-foreground hover:bg-primary/80': variant === 'default',\n            'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80': variant === 'secondary',\n            'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80': variant === 'destructive',\n            'text-foreground': variant === 'outline',\n            'border-transparent bg-green-500 text-white hover:bg-green-600': variant === 'success',\n            'border-transparent bg-yellow-500 text-white hover:bg-yellow-600': variant === 'warning',\n          },\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n);\n\nBadge.displayName = 'Badge';","import React from 'react';\nimport { clsx } from 'clsx';\n\nexport interface AlertProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'destructive' | 'warning' | 'success';\n}\n\nexport const Alert = React.forwardRef<HTMLDivElement, AlertProps>(\n  ({ className, variant = 'default', ...props }, ref) => (\n    <div\n      ref={ref}\n      role=\"alert\"\n      className={clsx(\n        'relative w-full rounded-lg border p-4',\n        {\n          'bg-background text-foreground': variant === 'default',\n          'border-destructive/50 text-destructive dark:border-destructive': variant === 'destructive',\n          'border-yellow-500/50 text-yellow-600 bg-yellow-50 dark:bg-yellow-900/10': variant === 'warning',\n          'border-green-500/50 text-green-600 bg-green-50 dark:bg-green-900/10': variant === 'success',\n        },\n        className\n      )}\n      {...props}\n    />\n  )\n);\n\nAlert.displayName = 'Alert';\n\nexport interface AlertTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {}\n\nexport const AlertTitle = React.forwardRef<HTMLParagraphElement, AlertTitleProps>(\n  ({ className, ...props }, ref) => (\n    <h5 ref={ref} className={clsx('mb-1 font-medium leading-none tracking-tight', className)} {...props} />\n  )\n);\n\nAlertTitle.displayName = 'AlertTitle';\n\nexport interface AlertDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {}\n\nexport const AlertDescription = React.forwardRef<HTMLParagraphElement, AlertDescriptionProps>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={clsx('text-sm opacity-90', className)} {...props} />\n  )\n);\n\nAlertDescription.displayName = 'AlertDescription';"],"mappings":"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","names":["React","clsx","jsx","React","clsx","jsx","React","clsx","jsx"]}