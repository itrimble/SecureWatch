[package]
name = "securewatch-agent"
version = "1.0.0"
edition = "2021"
authors = ["SecureWatch Team"]
description = "High-performance SIEM agent for SecureWatch platform"
license = "MIT"
repository = "https://github.com/securewatch/agent"

[[bin]]
name = "securewatch-agent"
path = "src/main.rs"

[dependencies]
# Tokio async runtime with full features
tokio = { version = "1.45.1", features = ["full"] }

# Core async utilities
tokio-tungstenite = "0.24"
tokio-util = { version = "0.7", features = ["full"] }
futures = "0.3"
async-compression = { version = "0.4", features = ["tokio", "zstd"] }
zstd = "0.13"

# Serialization and config
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"
bincode = "1.3"

# CLI and logging
clap = { version = "4.0", features = ["derive"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "time", "fmt"] }
tracing-appender = "0.2"
tracing-opentelemetry = { version = "0.23", optional = true }

# Networking and TLS - Configurable backends for cross-platform compatibility
reqwest = { version = "0.12", features = ["json", "gzip", "brotli"], default-features = false }

# TLS backends - enable one based on target platform
rustls = { version = "0.23", optional = true }
webpki-roots = { version = "0.26", optional = true }
native-tls = { version = "0.2", optional = true }

# System utilities
uuid = { version = "1.0", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
hostname = "0.4"
sysinfo = "0.32"

# Async trait support
async-trait = "0.1"

# Error handling
thiserror = "2.0"

# Cross-platform file watching
notify = "6.0"

# URL parsing and validation
url = "2.5"

# Glob pattern matching
glob = "0.3"

# gRPC for remote management (disabled for simplified build)
# tonic = "0.12"
# prost = "0.13"

# Regular expressions for parsing
regex = "1.10"

# XML parsing for Windows Event Logs
quick-xml = "0.36"

# JSON schema validation for configuration
jsonschema = "0.18"

# Cryptographic dependencies for secure credential storage
ring = "0.17"
base64 = "0.22"
zeroize = { version = "1.8", features = ["derive"] }

# Resource management dependencies
parking_lot = "0.12"
dashmap = "6.0"

# Database for persistent buffering (optional for minimal builds)
rusqlite = { version = "0.32", features = ["bundled"], optional = true }

# Build dependencies for gRPC (disabled for simplified build)
# [build-dependencies]
# tonic-build = "0.12"

# Windows-specific dependencies
[target.'cfg(windows)'.dependencies]
windows = { version = "0.58", features = [
    "Win32_System_EventLog",
    "Win32_System_Services",
    "Win32_Foundation",
    "Win32_Security",
    "Win32_System_Registry"
] }
winapi = { version = "0.3", features = ["winbase", "winerror"] }

# Unix-specific dependencies
[target.'cfg(unix)'.dependencies]
libc = "0.2"
nix = { version = "0.29", features = ["signal", "process"] }

[profile.release]
lto = true
codegen-units = 1
panic = "abort"
strip = true
opt-level = "s"

[profile.release-optimized]
inherits = "release"
opt-level = 3

[dev-dependencies]
tokio-test = "0.4"
tempfile = "3.0"
mockall = "0.13"
wiremock = "0.6"
serial_test = "3.1"
pretty_assertions = "1.4"
proptest = "1.5"
criterion = { version = "0.5", features = ["html_reports"] }
test-log = "0.2"
tracing-test = "0.2"

[features]
default = ["native-tls-backend", "persistent-storage"]
# Native TLS backend - uses platform TLS libraries (works better for cross-compilation)
native-tls-backend = ["native-tls", "reqwest/native-tls"]
# Rustls backend - pure Rust TLS (may have cross-compilation issues with C dependencies)
rustls-backend = ["rustls", "webpki-roots", "reqwest/rustls-tls"]
# Persistent storage using SQLite (may require C compilation)
persistent-storage = ["rusqlite"]
# OpenTelemetry integration for enterprise monitoring
opentelemetry = ["tracing-opentelemetry"]
# Minimal build without C dependencies (explicitly excludes persistent-storage)
minimal = ["native-tls-backend"]